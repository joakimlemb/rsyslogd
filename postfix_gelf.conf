# http://www.rsyslog.com/doc/master/tutorials/gelf_forwarding.html
# Postfix logs to JSON/GELF

# https://stackoverflow.com/questions/32660395/rsyslog-template-parse-failure-in-regular-expression

# Postfix Main templates
template(name="postfix_proc" type="string" string="%syslogtag:R,ERE,2,FIELD:(^postfix)\\/(.*)\\[--end%")
template(name="postfix_pid" type="string" string="%syslogtag:R,ERE,2,FIELD:(^postfix\\/.*)\\[(.*)\\]--end%")
template(name="postfix_mid" type="string" string="%msg:R,ERE,1,BLANK:^.([a-zA-Z0-9]{10}):--end%")

# Postfix smtpd templates
template(name="postfix_smtpd_ptr1" type="string" string="%msg:R,ERE,2,BLANK:([a-zA-Z]+ from) (.*)\\[(.*)\\]--end%")
template(name="postfix_smtpd_ptr2" type="string" string="%msg:R,ERE,3,BLANK:([a-zA-Z0-9]{10})(: client=)(.*)\\[(.*)\\]--end%")
template(name="postfix_smtpd_ptr3" type="string" string="%msg:R,ERE,2,BLANK:(RCPT from )(.*)\\[(.*)\\]:--end%")
template(name="postfix_smtpd_ip1" type="string" string="%msg:R,ERE,3,BLANK:([a-zA-Z]+ from) (.*)\\[(.*)\\]--end%")
template(name="postfix_smtpd_ip2" type="string" string="%msg:R,ERE,4,BLANK:([a-zA-Z0-9]{10})(: client=)(.*)\\[(.*)\\]--end%")
template(name="postfix_smtpd_ip3" type="string" string="%msg:R,ERE,3,BLANK:(RCPT from )(.*)\\[(.*)\\]:--end%")
template(name="postfix_smtpd_noqueue_status" type="string" string="%msg:R,ERE,1,BLANK:NOQUEUE: ([aA-zZ]+):--end%")

# Postfix qmgr templates
template(name="postfix_qmgr_from" type="string" string="%msg:R,ERE,1,BLANK:from=<(.*)>, size=([0-9]+), nrcpt=([0-9]+)--end%")
template(name="postfix_qmgr_size" type="string" string="%msg:R,ERE,2,BLANK:from=<(.*)>, size=([0-9]+), nrcpt=([0-9]+)--end%")
template(name="postfix_qmgr_nrcpt" type="string" string="%msg:R,ERE,3,BLANK:from=<(.*)>, size=([0-9]+), nrcpt=([0-9]+)--end%")

# Postfix smtp templates
template(name="postfix_smtp_to" type="string" string="%msg:R,ERE,1,BLANK:to=<(.*)>, relay--end%")
template(name="postfix_smtp_relay" type="string" string="%msg:R,ERE,1,BLANK:relay=(.*)\\[.*\\]:[0-9]+,--end%")
template(name="postfix_smtp_dsn" type="string" string="%msg:R,ERE,1,BLANK:dsn=([0-9]+.[0-9]+.[0-9]+),--end%")
template(name="postfix_smtp_status" type="string" string="%msg:R,ERE,1,BLANK:status=([aA-zZ]+)--end%")

# Postfix cleanup templates
template(name="postfix_cleanup_subject" type="string" string="%msg:R,ERE,1,BLANK:header [sS][uU][bB][jJ][eE][cC][tT]:(.*)from .*\\];--end%")
template(name="postfix_cleanup_from" type="string" string="%msg:R,ERE,1,BLANK:from=<(.*)> to=--end%")
template(name="postfix_cleanup_to" type="string" string="%msg:R,ERE,1,BLANK:to=<(.*)> proto=--end%")

if ($programname == 'postfix') then {
    set $!postfix_proc = exec_template("postfix_proc");
    set $!postfix_pid = exec_template("postfix_pid");
    
    # We don't care about the anvil and scache statistics, so discard those messages
    if ($!postfix_proc == "anvil") then {
        stop
    }
    if ($!postfix_proc == "scache") then {
        stop
    }
    
    if ($!postfix_proc == "smtpd") then {
        if ($msg contains "connect") then {
            set $!postfix_smtpd_ptr = exec_template("postfix_smtpd_ptr1");
            set $!postfix_smtpd_ip = exec_template("postfix_smtpd_ip1");
        }
        if ($msg contains ": client=") then {
            set $!postfix_mid = exec_template("postfix_mid");
            set $!postfix_smtpd_ptr = exec_template("postfix_smtpd_ptr2");
            set $!postfix_smtpd_ip = exec_template("postfix_smtpd_ip2");
        }
        if ($msg startswith " NOQUEUE") then {
            set $!postfix_smtpd_ptr = exec_template("postfix_smtpd_ptr3");
            set $!postfix_smtpd_ip = exec_template("postfix_smtpd_ip3");
            set $!postfix_mail_from = exec_template("postfix_cleanup_from");
            set $!postfix_mail_to = exec_template("postfix_cleanup_to");
            set $!postfix_mail_status = exec_template("postfix_smtpd_noqueue_status");
       }
       if ($msg startswith " warning:") then {
            set $!postfix_smtpd_ptr = exec_template("postfix_smtpd_ptr1");
            set $!postfix_smtpd_ip = exec_template("postfix_smtpd_ip1");
        }
    }
    if ($!postfix_proc == "qmgr") then {
        set $!postfix_mid = exec_template("postfix_mid");
        set $!postfix_mail_from = exec_template("postfix_qmgr_from");
        set $!postfix_mail_size = exec_template("postfix_qmgr_size");
        set $!postfix_mail_nrcpt = exec_template("postfix_qmgr_nrcpt");
    }
    if ($!postfix_proc == "smtp") then {
        set $!postfix_mid = exec_template("postfix_mid");
        set $!postfix_mail_to = exec_template("postfix_smtp_to");
        set $!postfix_smtp_relay = exec_template("postfix_smtp_relay");
        set $!postfix_smtp_dsn = exec_template("postfix_smtp_dsn");
        set $!postfix_mail_status = exec_template("postfix_smtp_status");
    }
    if ($!postfix_proc == "cleanup") then {
        set $!postfix_mid = exec_template("postfix_mid");
        set $!postfix_mail_subject = exec_template("postfix_cleanup_subject");
        set $!postfix_mail_from = exec_template("postfix_cleanup_from");
        set $!postfix_mail_to = exec_template("postfix_cleanup_to");
    }
    if ($!postfix_proc == "error") then {
        set $!postfix_mid = exec_template("postfix_mid");
    }
    if ($!postfix_proc == "bounce") then {
        set $!postfix_mid = exec_template("postfix_mid");
    }
}

# Postfix GELF template for Graylog
# http://docs.graylog.org/en/2.3/pages/gelf.html
template(name="gelf" type="list") {
    constant(value="{\"version\":\"1.1\",")
    constant(value="\"host\":\"")
    property(name="hostname")
    constant(value="\",\"short_message\":\"")
    property(name="msg" format="json")
    constant(value="\",\"timestamp\":")
    property(name="timegenerated" dateformat="unixtimestamp")
    constant(value=".")
    property(name="timegenerated" dateformat="subseconds")
    constant(value=",\"level\":")
    property(name="syslogseverity")
    constant(value=",\"_facility\":\"")
    property(name="programname")
    constant(value="\",\"_postfix_process\":\"")
    property(name="$!postfix_proc")
    constant(value="\",\"_postfix_pid\":\"")
    property(name="$!postfix_pid")
    constant(value="\",\"_postfix_smtpd_ip\":\"")
    property(name="$!postfix_smtpd_ip")
    constant(value="\",\"_postfix_smtpd_ptr\":\"")
    property(name="$!postfix_smtpd_ptr")
    constant(value="\",\"_postfix_mail_id\":\"")
    property(name="$!postfix_mid")
    constant(value="\",\"_postfix_mail_from\":\"")
    property(name="$!postfix_mail_from")
    constant(value="\",\"_postfix_mail_size\":\"")
    property(name="$!postfix_mail_size")
    constant(value="\",\"_postfix_mail_nrcpt\":\"")
    property(name="$!postfix_mail_nrcpt")
    constant(value="\",\"_postfix_mail_to\":\"")
    property(name="$!postfix_mail_to")
    constant(value="\",\"_postfix_smtp_relay\":\"")
    property(name="$!postfix_smtp_relay")
    constant(value="\",\"_postfix_smtp_dsn\":\"")
    property(name="$!postfix_smtp_dsn")
    constant(value="\",\"_postfix_mail_status\":\"")
    property(name="$!postfix_mail_status")
    constant(value="\",\"_postfix_mail_subject\":\"")
    property(name="$!postfix_mail_subject")
    constant(value="\"}")
    constant(value="\n")
}

# Send GELF JSON to Graylog server:
if ($programname == 'postfix') then {
    action(
        type="omfwd"
        Target="x.x.x.x"
        Port="12211"
        # Only UDP works until with rsyslog >= v8.28 due to TCP_FrameDelimiter="0" is missing in previous versions. 
        Protocol="udp"
        template="gelf"
        compression.mode="none"
        # Slight delay to not overload the UDP buffer (in microseconds)
        udp.sendDelay="100"
    )
#    stop
}

# Debug GELF to disk:
#if ($programname == 'postfix') then {
#    action(
#        type="omfile"
#        file="/var/log/gelf_debug.log"
#        template="gelf"
#    )
##    stop
#}

# Setup Queues: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/s1-working_with_queues_in_rsyslog.html (Only works with TCP?)